[{"D:\\social_m\\client_side\\src\\index.js":"1","D:\\social_m\\client_side\\src\\App.js":"2","D:\\social_m\\client_side\\src\\Apollo.js":"3","D:\\social_m\\client_side\\src\\routes\\home.js":"4","D:\\social_m\\client_side\\src\\routes\\login.js":"5","D:\\social_m\\client_side\\src\\routes\\register.js":"6","D:\\social_m\\client_side\\src\\components\\menu.js":"7","D:\\social_m\\client_side\\src\\components\\PostDisplay.js":"8","D:\\social_m\\client_side\\src\\context\\authentification.js":"9","D:\\social_m\\client_side\\src\\utility\\AuthRoute.js":"10","D:\\social_m\\client_side\\src\\components\\PostComp.js":"11","D:\\social_m\\client_side\\src\\components\\LoveButton.js":"12","D:\\social_m\\client_side\\src\\routes\\PostPage.js":"13","D:\\social_m\\client_side\\src\\components\\DeleteButton.js":"14"},{"size":132,"mtime":1610706713331,"results":"15","hashOfConfig":"16"},{"size":897,"mtime":1611087887536,"results":"17","hashOfConfig":"16"},{"size":1038,"mtime":1611080291961,"results":"18","hashOfConfig":"16"},{"size":2412,"mtime":1611083336028,"results":"19","hashOfConfig":"16"},{"size":3372,"mtime":1611070560489,"results":"20","hashOfConfig":"16"},{"size":4624,"mtime":1611074208006,"results":"21","hashOfConfig":"16"},{"size":3199,"mtime":1611074761539,"results":"22","hashOfConfig":"16"},{"size":1992,"mtime":1611090959395,"results":"23","hashOfConfig":"16"},{"size":1934,"mtime":1611075694094,"results":"24","hashOfConfig":"16"},{"size":608,"mtime":1611077245461,"results":"25","hashOfConfig":"16"},{"size":2925,"mtime":1611093299861,"results":"26","hashOfConfig":"16"},{"size":1853,"mtime":1611094542481,"results":"27","hashOfConfig":"16"},{"size":5571,"mtime":1611099656127,"results":"28","hashOfConfig":"16"},{"size":1446,"mtime":1611097625667,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1lff6qe",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"D:\\social_m\\client_side\\src\\index.js",[],["61","62"],"D:\\social_m\\client_side\\src\\App.js",[],"D:\\social_m\\client_side\\src\\Apollo.js",[],"D:\\social_m\\client_side\\src\\routes\\home.js",[],"D:\\social_m\\client_side\\src\\routes\\login.js",[],"D:\\social_m\\client_side\\src\\routes\\register.js",[],"D:\\social_m\\client_side\\src\\components\\menu.js",[],"D:\\social_m\\client_side\\src\\components\\PostDisplay.js",["63"],"import React, { useContext }from 'react';\r\nimport { Card, Button, Icon, Label, Image } from 'semantic-ui-react';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../context/authentification';\r\nimport Love from './LoveButton';\r\nimport DeleteButton from '../components/DeleteButton.js';\r\n\r\n// create function to return what to display on homepage\r\n// deconstruct the props post directly in the parameters\r\nfunction PostDisplay ({ \r\n    post: {id, contains, username, comments, commCount, likes, likeCount, datePosted}\r\n    }) {\r\n\r\n    const context = useContext(AuthContext);    \r\n    \r\n    function likePost() {\r\n        console.log('Liked')\r\n    }\r\n\r\n    return (\r\n        <Card fluid>\r\n            <Card.Content>\r\n                <Image\r\n                    floated='right'\r\n                    size='tiny'\r\n                    src='https://react.semantic-ui.com/images/avatar/large/jenny.jpg'\r\n                />\r\n            <Card.Header>{username}</Card.Header>\r\n            {/*extract current time minus date when it was posted to get difference*/}\r\n            <Card.Meta>{moment(datePosted).fromNow()}</Card.Meta>\r\n            <Card.Description>\r\n                {contains}\r\n            </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Love user={context.user} post={{id, likes, likeCount}}/>\r\n                <Button labelPosition='left' as={Link} to={`/posts/${id}`}>\r\n                    <Button color='blue' basic>\r\n                        <Icon name='comments' />\r\n                            Comments\r\n                    </Button>\r\n                <Label as='a' basic color='blue' pointing='left'>\r\n                    {commCount}\r\n                </Label>\r\n                </Button>\r\n                {context.user && context.user.username === username && <DeleteButton postID={id}/>}\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PostDisplay;","D:\\social_m\\client_side\\src\\context\\authentification.js",["64"],"import React, { useReducer, createContext } from 'react';\r\nimport decodeToken from 'jwt-decode';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst initialState = {\r\n    user: null\r\n}\r\n\r\n// check if token is there\r\nif(localStorage.getItem('token')){\r\n    // decode token to check if it expired\r\n    const tkn = jwtDecode(localStorage.getItem('token'));  \r\n\r\n    if (tkn.exp * 1000 < Date.now()){\r\n        localStorage.removeItem('token');\r\n    }\r\n    else {\r\n        initialState.user = tkn;\r\n    }\r\n}\r\n\r\n// to not pass props from one level to another use context\r\nconst AuthContext = createContext({\r\n    user: null,\r\n    login : (data) => {},\r\n    logout: () => {}\r\n})\r\n\r\nfunction authReducer(state, action) {\r\n    switch(action.type){\r\n        case 'login': \r\n            return{\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        case 'logout':\r\n            return{\r\n                ...state,\r\n                user: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nfunction AuthProvider(props){\r\n    const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n    // when login call the function and change the data inside the context\r\n    // and set the user to the user data so that the app knows it logged in\r\n    const login = (data) => {\r\n        // save token to local storage, when refresh it will remain\r\n        localStorage.setItem('token', data.token);\r\n\r\n        dispatch({\r\n            type: 'login',\r\n            payload: data\r\n        })\r\n    }\r\n\r\n    const logout = () =>{\r\n        localStorage.removeItem('token');\r\n\r\n        dispatch({\r\n            type: 'logout'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                user: state.user,\r\n                login,\r\n                logout\r\n            }}\r\n            {...props}\r\n            />\r\n    )\r\n}\r\n\r\nexport { AuthContext, AuthProvider };","D:\\social_m\\client_side\\src\\utility\\AuthRoute.js",[],"D:\\social_m\\client_side\\src\\components\\PostComp.js",[],"D:\\social_m\\client_side\\src\\components\\LoveButton.js",[],"D:\\social_m\\client_side\\src\\routes\\PostPage.js",[],"D:\\social_m\\client_side\\src\\components\\DeleteButton.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":18,"column":14,"nodeType":"71","messageId":"72","endLine":18,"endColumn":22},{"ruleId":"69","severity":1,"message":"73","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":19},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'likePost' is defined but never used.","Identifier","unusedVar","'decodeToken' is defined but never used.","no-global-assign","no-unsafe-negation"]